// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  userId      String   @unique
  password    String
  name        String
  affiliation String   // 소그룹 
  phoneNumber String   @unique
  birthDate   DateTime
  gender      String
  survey_responses SurveyResponse[]
  retreat_infos RetreatInfo[]

  @@map("users")
}

model SurveyResponse {
  id             Int      @id @default(autoincrement())
  userId         String   @unique
  role           String   // 역할: "조장", "조원", "새친구"
  breakfastDay1  Boolean  // 8/23 아침
  lunchDay1      Boolean  // 8/23 점심
  dinnerDay1     Boolean  // 8/23 저녁
  breakfastDay2  Boolean  // 8/24 아침
  lunchDay2      Boolean  // 8/24 점심
  dinnerDay2     Boolean  // 8/24 저녁
  breakfastDay3  Boolean  // 8/25 아침
  lunchDay3      Boolean  // 8/25 점심
  transportType  String   // 이동수단: "대중교통", "자차"
  carPlate       String?  // 차량번호 (자차를 선택한 경우)
  ssn            String   // 주민등록번호 (보안상의 이유로 String 사용)
  insurance      Boolean  // 여행자보험 가입 여부
  user           User     @relation(fields: [userId], references: [userId])

  @@map("survey_responses")
}

model RetreatInfo {
  id             Int    @id @default(autoincrement())
  userId         String
  feePaid        Boolean  // 수련회비 납입 여부
  onsiteRegistration Boolean  // 수련회 현장 등록 여부
  user           User     @relation(fields: [userId], references: [userId])

  @@map("retreat_infos")
}